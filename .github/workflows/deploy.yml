name: Deploy to Azure App Service

on:
  push:
    branches: [ ai-azure-prod ]
  pull_request:
    branches: [ ai-azure-prod ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      PATH: "/usr/local/bin:$PATH"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install latest CMake
      run: |
        sudo apt-get update
        sudo apt-get remove -y cmake
        sudo apt-get install -y wget build-essential libopenblas-dev liblapack-dev
        wget https://github.com/Kitware/CMake/releases/download/v3.27.9/cmake-3.27.9-linux-x86_64.sh
        sudo sh cmake-3.27.9-linux-x86_64.sh --skip-license --prefix=/usr/local
        # Make sure the new cmake is in PATH and accessible
        sudo ln -sf /usr/local/bin/cmake /usr/bin/cmake
        echo "/usr/local/bin" >> $GITHUB_PATH
        export PATH="/usr/local/bin:$PATH"
        cmake --version
        which cmake
        # Verify the cmake version is correct
        /usr/local/bin/cmake --version
    
    - name: Install Python dependencies
      run: |
        export PATH="/usr/local/bin:$PATH"
        python -m pip install --upgrade pip
        # Verify cmake is accessible and correct version
        which cmake
        cmake --version
        # Install dlib with specific build options
        pip install dlib --no-cache-dir
        # Install remaining dependencies
        pip install -r requirements.txt
    
    - name: Run tests and validate app
      run: |
        # Validate app structure and imports
        python -c "import app; print('✅ App imports successfully')"
        python -c "from app import app; print('✅ Flask app created successfully')"
        # Test if all required packages are installed
        python -c "import cv2, numpy, dlib, scipy; print('✅ All required packages installed')"
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      if: github.ref == 'refs/heads/ai-azure-prod'
      with:
        app-name: 'driverguardai'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
